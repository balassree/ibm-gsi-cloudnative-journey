(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{Nx2K:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return i}));n("91GP"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("q1tI");var a=n("7ljp"),o=n("013z");n("qKvR");function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var l={},b={_frontmatter:l},c=o.a;function i(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(a.b)(c,r({},b,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",null,"Problem"),Object(a.b)("p",null,"Your commander has a simple data process that is run periodically to check status. They would like to stop doing this manually in order to save time, so you have been asked to implement a cron job in the Kubernetes cluster to run this process. "),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Create a cron job called xwing-cronjob using the ",Object(a.b)("inlineCode",{parentName:"li"},"ibmcase/xwing-status:1.0")," image. "),Object(a.b)("li",{parentName:"ul"},"Have the job run every second minute with the following cron expression: ",Object(a.b)("inlineCode",{parentName:"li"},"*/2 * * * *"),"."),Object(a.b)("li",{parentName:"ul"},"Pass the argument ",Object(a.b)("inlineCode",{parentName:"li"},"/usr/sbin/xwing-status.sh")," to the container.")),Object(a.b)("h2",null,"Solution"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Create the cronjob executing the below command and use the below yaml defination."),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",r({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0})," oc apply -f Downloads/FoundationHandsOn/cronjob.yaml -n {DEV_NAMESPACE}\n")),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",r({parentName:"pre"},{className:"language-yaml"}),'  apiVersion: batch/v1beta1\n  kind: CronJob\n  metadata:\n  name: xwing-cronjob\n  spec:\n  schedule: "*/2 * * * *"\n  jobTemplate:\n     spec:\n        template:\n        spec:\n           containers:\n           - name: xwing-status\n              image: ibmcase/xwing-status:1.0\n              args:\n              - /usr/sbin/xwing-status.sh\n           restartPolicy: OnFailure\n'))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"To view th Cronjob."),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",r({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0})," oc get cronjob xwing-cronjob -n -n {DEV_NAMESPACE}\n")))),Object(a.b)("h2",null,"Verification"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Run ",Object(a.b)("inlineCode",{parentName:"li"},"kubectl get cronjobs.batch")," and ",Object(a.b)("inlineCode",{parentName:"li"},"LAST-SCHEDULE")," to see last time it ran"),Object(a.b)("li",{parentName:"ul"},"From a bash shell, run the following to see the logs for all jobs:")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{}),'jobs=( $(kubectl get jobs --no-headers -o custom-columns=":metadata.name") )\necho -e "Job \\t\\t\\t\\t Pod \\t\\t\\t\\t\\tLog"\nfor job in "${jobs[@]}"\ndo\n   pod=$(kubectl get pods -l job-name=$job --no-headers -o custom-columns=":metadata.name")\n   echo -en "$job \\t $pod \\t"\n   kubectl logs $pod\ndone\n')))}i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-developer-foundation-activities-labs-lab-7-index-mdx-183fdb3588ff1faac5f0.js.map