{"version":3,"sources":["webpack:///./src/pages/contributing/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-contributing-index-mdx-72b52b78322af5af7048.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/bala/Documents/gsi-cloudnative-squad/ibm-gsi-cloudnative-journeyV1.1/ibm-gsi-cloudnative-journey/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Roles and responsibilities`}</h2>\n    <h3>{`Consumers`}</h3>\n    <p><em parentName=\"p\">{`Consumers`}</em>{` are members of the community who are applying assets to their development projects. Anyone who wants to apply any of the assets can be a user. We encourage consumers to participate as evangelists and contributors as well.`}</p>\n    <h3>{`Evangelists`}</h3>\n    <p><em parentName=\"p\">{`Evangelists`}</em>{` are members of the community who help others become consumers of the assets. They do so by:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Advertising the assets and encouraging others to use them`}</li>\n      <li parentName=\"ul\">{`Supporting new consumers and answering questions, such as on Slack (IBM internal)`}</li>\n      <li parentName=\"ul\">{`Reporting bugs or missing features through GitHub issues`}</li>\n    </ul>\n    <h3>{`Contributors`}</h3>\n    <p><em parentName=\"p\">{`Contributors`}</em>{` are members of the community who help maintain, improve, and expand the assets. In addition to using and evangelizing the assets, they make the assets better by:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Resolving issues in GitHub to fix bugs, add features, and improve documentation`}</li>\n      <li parentName=\"ul\">{`Submitting changes as GitHub pull requests`}</li>\n    </ul>\n    <h3>{`Maintainers`}</h3>\n    <p><em parentName=\"p\">{`Project maintainers`}</em>{` (aka maintainers) are owners of the project who are committed to the success of the assets in that project. Each project has a team of maintainers, and each team has a lead. In addition to their participation as contributors, maintainers have privileges to:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Label, close, and manage GitHub issues`}</li>\n      <li parentName=\"ul\">{`Close and merge GitHub pull requests`}</li>\n      <li parentName=\"ul\">{`Nominate and vote on new maintainers`}</li>\n    </ul>\n    <h2>{`Types of teams`}</h2>\n    <h3>{`Core team`}</h3>\n    <p>{`Core team members are IBM employees responsible for the leadership and strategic direction of the set of Catalyst projects as a whole. The core team also directs how the Catalyst strategy will evolve with IBM Cloud product decisions. Core team responsibilities include:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Actively engaging with the projects’ communities`}</li>\n      <li parentName=\"ul\">{`Setting overall direction and vision`}</li>\n      <li parentName=\"ul\">{`Setting priorities and release schedule`}</li>\n      <li parentName=\"ul\">{`Focusing on broad, cross-cutting concerns`}</li>\n      <li parentName=\"ul\">{`Spinning up or shutting down project teams`}</li>\n    </ul>\n    <p>{`The core team will operate the technical steering committee.`}</p>\n    <h2>{`Governance`}</h2>\n    <h3>{`Support`}</h3>\n    <p>{`Have questions? Found a bug? Learn where to go and what to do by visiting the `}<a parentName=\"p\" {...{\n        \"href\": \"/ibm-gsi-cloudnative-journey/help/support\"\n      }}>{`Support page`}</a>{`.`}</p>\n    <h2>{`Contributing`}</h2>\n    <h3>{`Requirements`}</h3>\n    <p>{`Set up your SSH Key GitHub account and install node.js 11 or higher.`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://help.github.com/articles/generating-ssh-keys/\"\n        }}>{`Generating SSH Keys - GitHub`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/creationix/nvm\"\n        }}><inlineCode parentName=\"a\">{`nvm`}</inlineCode>{` (Node Version Manager)`}</a>{` to use the\n`}<inlineCode parentName=\"li\">{`Node 6`}</inlineCode>{`.`}</li>\n    </ul>\n    <h3>{`Make a pull request`}</h3>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` Before you make a pull request,\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ibm-gsi-ecosystem/ibm-gsi-cloudnative-journey/issues\"\n      }}>{`search`}</a>{` the issues to see if a\nsimilar issue has already been submitted. If a similar issue has been submitted,\nassign yourself or ask to be assigned to the issue by posting a comment. If the\nissue does not exist, create a new issue.`}</p>\n    <p>{`When you’re at a good stopping place and you’re ready for feedback from other\ncontributors and maintainers, `}<strong parentName=\"p\">{`push your commits to your fork`}</strong>{`:`}</p>\n    <h4>{`Commit message format`}</h4>\n    <p>{`Each commit message should clearly describe the changes that are being made. During the\ndevelopment process as many small changes are made, a single one-liner is sufficient for\nthe commit message.`}</p>\n    <p>{`With larger changes or when the changes in the branch are squashed into a single commit,\nthe following commit message format is preferred.`}</p>\n    <p><em parentName=\"p\">{`Writing commit messages`}</em></p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://help.github.com/articles/closing-issues-via-commit-messages/\"\n        }}>{`Close a commit via commit message`}</a></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<type>`}</inlineCode>{` indicates the type of commit that’s being made. This can be: `}<inlineCode parentName=\"li\">{`feat`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`fix`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`perf`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`docs`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`chore`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`style`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`refactor`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<scope>`}</inlineCode>{` the scope could be anything specifying place of the commit change or the thing(s) that changed.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<subject>`}</inlineCode>{` the subject should be a short overview of the change.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<body>`}</inlineCode>{` the body should be a detailed description of the change(s). This can be prose or a bulleted listing.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<issue reference>`}</inlineCode>{` the issue reference should be a reference to the issue number under which this change is being\nmade. The issue reference should be in the format of `}<inlineCode parentName=\"li\">{`{git org}/{git repo}#{issue number}`}</inlineCode></li>\n    </ul>\n    <p><em parentName=\"p\">{`Commit message format:`}</em></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`   <BLANK LINE>\n   <body>\n   <BLANK LINE>\n   <issue reference>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`                                                                                                                                                                                                                                                                             \\`\\`\\`\n`}</code></pre>\n    <h4>{`Create a draft pull request when the branch is first pushed to the fork`}</h4>\n    <p>{`GitHub recently introduced `}<inlineCode parentName=\"p\">{`draft`}</inlineCode>{` pull requests that allow a pull request to be recorded but\nmarked as not yet ready for review. Git provides a url to open a pull request the first time a branch\nis first pushed to the remote, which gives an excellent and easy opportunity to create the draft.`}</p>\n    <p><strong parentName=\"p\">{`Note`}</strong>{`: Be sure to link the pull request with the issue`}</p>\n    <p>{`Creating a draft pull request early has the following benefits:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Clicking the link provided by Git sets up the source and target repos/branches for you so you don’t\nneed to hunt around`}</li>\n      <li parentName=\"ol\">{`Having the draft pull request gives insight for everyone else where the work is being done`}</li>\n    </ol>\n    <h4>{`Push changes to your fork frequently during development`}</h4>\n    <p>{`As you are making changes, push them frequently to the fork. This ensures that your code is backed up\nsomewhere and allows everyone else to see what activity is happening. It also means that if you get\npulled into some other work, the latest version of your changes are available for others to possibly\npick up where you left off.`}</p>\n    <h4>{`Pull in the latest changes from master frequently and rebase your branch`}</h4>\n    <p>{`It is good to make sure you are always working off of the latest code from the upstream. With the\nchanges in a separate branch, it is easy to bring in upstream changes with the following steps:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Checkout master in the local clone`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`git checkout master\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Pull in the changes from the `}<inlineCode parentName=\"p\">{`upstream`}</inlineCode>{` repository`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`git pull\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Check out your branch`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`git checkout {branch}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Rebase your branch on master`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`git rebase master\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Force push the changes`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`git push --force-with-lease\n`}</code></pre>\n      </li>\n    </ol>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Is it a Breaking Change?`}</strong></p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`We want to respect semver. It’s important to discern whether your pull request\ncontains breaking changes or not. Sometimes, renaming or removing things in\nthe code can result in breaking changes.`}</p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Here are some examples of breaking changes… changing, renaming or removing\nany of the following:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\">{`HTML attributes`}</li>\n        <li parentName=\"ul\">{`Folders or Files`}</li>\n        <li parentName=\"ul\">{`Any SCSS `}<inlineCode parentName=\"li\">{`@mixin`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`$variable`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`function`}</inlineCode></li>\n        <li parentName=\"ul\">{`Any JS `}<inlineCode parentName=\"li\">{`function`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`class`}</inlineCode></li>\n      </ul>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`We also practice `}<strong parentName=\"p\">{`graceful deprecation`}</strong>{` when something is slated to be\nremoved — we mark it as deprecated in the current version and remove it in\nthe next major version.`}</p>\n    </blockquote>\n    <p>{`Before you create a pull request, change the base branch depending on what kind\nof change you’re submitting.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Pull requests with `}<strong parentName=\"li\">{`non-breaking changes`}</strong>{` like patches and minor updates use\nthe `}<inlineCode parentName=\"li\">{`master`}</inlineCode>{` as the base branch.`}</li>\n      <li parentName=\"ul\">{`Pull requests with `}<strong parentName=\"li\">{`breaking changes`}</strong>{` use the latest `}<inlineCode parentName=\"li\">{`major version number`}</inlineCode>{`\nbranch as the base branch (i.e. `}<inlineCode parentName=\"li\">{`7.0.0`}</inlineCode>{` or whatever the next major version\nis).`}</li>\n    </ul>\n    <p>{`Write a title and description then click `}<inlineCode parentName=\"p\">{`Create pull request`}</inlineCode></p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/blog/1943-how-to-write-the-perfect-pull-request\"\n        }}>{`How to write the perfect pull request`}</a></li>\n    </ul>\n    <h3>{`Updating a pull request`}</h3>\n    <p>{`Stay up to date with the activity in your pull request. Maintainers from the\nDesign System team will be reviewing your work and making comments, asking\nquestions and suggesting changes to be made before they merge your code.`}</p>\n    <p>{`:tada: You no longer need to squash commits :tada:`}</p>\n    <p>{`When you need to make a change, add, commit and push to your branch normally.`}</p>\n    <p>{`Once all revisions to your pull request are complete, someone from Design\nSystems will squash and merge your commits for you.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}