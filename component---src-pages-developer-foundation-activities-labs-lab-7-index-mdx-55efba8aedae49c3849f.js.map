{"version":3,"sources":["webpack:///./src/pages/developer-foundation/activities/labs/lab7/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iCACA,6QACA,sBACE,kBAAIC,WAAW,MAAf,oDAAyE,0BAAYA,WAAW,MAAvB,4BAAzE,YACA,kBAAIA,WAAW,MAAf,4EAAiG,0BAAYA,WAAW,MAAvB,eAAjG,KACA,kBAAIA,WAAW,MAAf,qBAA0C,0BAAYA,WAAW,MAAvB,6BAA1C,uBAEF,kCACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,qFACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,iBACb,WAAc,SACd,QAAU,IAHO,+EAMrB,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,kBADI,uYAoBvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,uBACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,iBACb,WAAc,SACd,QAAU,IAHO,4DAQzB,sCACA,sBACE,kBAAIA,WAAW,MAAf,OAA4B,0BAAYA,WAAW,MAAvB,8BAA5B,QAA4G,0BAAYA,WAAW,MAAvB,iBAA5G,4BACA,kBAAIA,WAAW,MAAf,uEAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,8TAaTJ,EAAWK,gBAAiB","file":"component---src-pages-developer-foundation-activities-labs-lab-7-index-mdx-55efba8aedae49c3849f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/bala/Documents/gsi-cloudnative-squad/ibm-gsi-cloudnative-journeyV1.1/ibm-gsi-cloudnative-journey/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Problem`}</h2>\n    <p>{`Your commander has a simple data process that is run periodically to check status. They would like to stop doing this manually in order to save time, so you have been asked to implement a cron job in the Kubernetes cluster to run this process. `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Create a cron job called xwing-cronjob using the `}<inlineCode parentName=\"li\">{`ibmcase/xwing-status:1.0`}</inlineCode>{` image. `}</li>\n      <li parentName=\"ul\">{`Have the job run every second minute with the following cron expression: `}<inlineCode parentName=\"li\">{`*/2 * * * *`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Pass the argument `}<inlineCode parentName=\"li\">{`/usr/sbin/xwing-status.sh`}</inlineCode>{` to the container.`}</li>\n    </ul>\n    <h2>{`Solution`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Create the cronjob executing the below command and use the below yaml defination.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{` oc apply -f Downloads/FoundationHandsOn/cronjob.yaml -n {DEV_NAMESPACE}\n`}</code></pre>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`  apiVersion: batch/v1beta1\n  kind: CronJob\n  metadata:\n  name: xwing-cronjob\n  spec:\n  schedule: \"*/2 * * * *\"\n  jobTemplate:\n     spec:\n        template:\n        spec:\n           containers:\n           - name: xwing-status\n              image: ibmcase/xwing-status:1.0\n              args:\n              - /usr/sbin/xwing-status.sh\n           restartPolicy: OnFailure\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To view th Cronjob.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{` oc get cronjob xwing-cronjob -n -n {DEV_NAMESPACE}\n`}</code></pre>\n      </li>\n    </ul>\n    <h2>{`Verification`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Run `}<inlineCode parentName=\"li\">{`kubectl get cronjobs.batch`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`LAST-SCHEDULE`}</inlineCode>{` to see last time it ran`}</li>\n      <li parentName=\"ul\">{`From a bash shell, run the following to see the logs for all jobs:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`jobs=( $(kubectl get jobs --no-headers -o custom-columns=\":metadata.name\") )\necho -e \"Job \\\\t\\\\t\\\\t\\\\t Pod \\\\t\\\\t\\\\t\\\\t\\\\tLog\"\nfor job in \"\\${jobs[@]}\"\ndo\n   pod=$(kubectl get pods -l job-name=$job --no-headers -o custom-columns=\":metadata.name\")\n   echo -en \"$job \\\\t $pod \\\\t\"\n   kubectl logs $pod\ndone\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}